[{"content":"Originals #Submerged Breathing # Battle # Transcriptions #Ave Mujica #Soundtrack from 《BanG Dream! Ave Mujica》 # 《Imprisoned XII》 # crychic #《春日影》 #(Only the drums and bass were transcribed by me)\n《人間になりたいうた》 # AoV #《Sinestrea-BloodMoon》 # Gi #《靜夜的輕語 Silent Voices of the Night》 # 《厄境之喻 Metaphor for Calamity》 # 《鯨波鼉浪 Undersea Encounters》 # 《燭燼的奉信禮 Chorus Cinericius》(Piano) # 《為一切戰爭的終結 To the End of All Wars》 # 《厄夜深冥 Grim Is the Night》 # 《鑄錐之刻 Shaping the Struggle》 # 《激揚的韌戰 Inevitable Conflict》（部分） # Soundtrack from Genshin Impact v5.4 # ZZZ #《閃亮 Shining》（部分） # ","date":"5 April 2025","permalink":"/posts/transcribing-music-with-reaper/","section":"Posts","summary":"","title":"My Music and Transcriptions"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/","section":"Wmomood","summary":"","title":"Wmomood"},{"content":"Wine stands for \u0026ldquo;Wine Is Not an Emulator\u0026rdquo;. It is a compatibility layer that allows you to run Windows applications on Linux, macOS, and BSD without needing a full Windows OS or a virtual machine.\nKey Features # Runs native Windows apps on POSIX-compliant systems No virtualization: runs programs at near-native performance Can integrate with Wine prefixes (separate environments for apps) Works with tools like winetricks, proton, yabridge, and more Typical Wine Paths # Component Default Path Wine Prefix ~/.wine/ C Drive ~/.wine/drive_c/ Installed Apps ~/.wine/drive_c/Program Files/ You can use custom prefixes like ~/.wine-vst64 for isolating environments.\nBasic Usage ## Run a Windows installer wine setup.exe # Run a program already installed wine \u0026#34;C:\\Program Files\\App\\app.exe\u0026#34; Tip: Always use quotes around Windows-style paths.\nSetup a Clean 64-bit Wine Prefix #WINEPREFIX=~/.wine-new WINEARCH=win64 wineboot Extend Wine with: # winetricks – install Windows DLLs or fonts yabridge – bridge Windows VST plugins to Linux DAWs Proton – Valve’s Wine fork optimized for gaming (used by Steam) More Info # Official site: https://www.winehq.org App compatibility: https://appdb.winehq.org ","date":"20 March 2025","permalink":"/posts/what-is-wine/","section":"Posts","summary":"","title":"What Is Wine"},{"content":"yabridge is a powerful tool that allows you to use Windows VST2 and VST3 plugins seamlessly on Linux through Wine. Here\u0026rsquo;s how I set it up.\nPrerequisites #Make sure you have the following installed:\nWine (preferably wine-staging) yabridge A VST-compatible DAW (e.g. REAPER) winetricks (optional but useful) Wine installed in a 64-bit prefix On Arch Linux: #You can install these via the AUR helper such as yay:\nyay -S wine-staging yabridge yabridgectl winetricks 1. Prepare Your Wine Prefix #Create and configure a clean 64-bit Wine prefix: (You can replace .wine with any name you prefer for isolation)\nWINEPREFIX=~/.wine WINEARCH=win64 wineboot Optionally, install dependencies for certain plugins:\nWINEPREFIX=~/.wine winetricks corefonts vcrun2015 2. Install Your Windows VST Plugins #Install your VST2/VST3 plugins into the Wine prefix:\nVST2 typically go into:\n~/.wine/drive_c/Program Files/VstPlugins/\nVST3 go into:\n~/.wine/drive_c/Program Files/Common Files/VST3/\nMake sure the plugins are properly installed inside your Wine environment.\n3. Configure yabridge #Register your plugin directories with yabridgectl:\nyabridgectl add \u0026#34;~/.wine/drive_c/Program Files/VstPlugins\u0026#34; yabridgectl add \u0026#34;~/.wine/drive_c/Program Files/Common Files/VST3\u0026#34; Here are my list of directories in yabridge:\n❯ yabridgectl list /home/momo/.wine/drive_c/Program Files/Common Files/VST2 /home/momo/.wine/drive_c/Program Files/Common Files/VST3 /home/momo/.wine/drive_c/Program Files/Common Files/VstPlugins /home/momo/.wine/drive_c/Program Files/Steinberg/VSTPlugins /home/momo/.wine/drive_c/Program Files/VstPlugins /home/momo/.wine/drive_c/Program Files (x86)/VSTPlugins /home/momo/.wine/drive_c/VST64 /home/momo/.wine-spitfire/drive_c/Program Files/Common Files/VST3 Then synchronize:\nyabridgectl sync This step bridges the Windows plugins into .vst/ and .vst3/ directories under ~/.vst/ and ~/.vst3/ respectively, which Linux-native DAWs can scan.\n4. Set Plugin Paths in Your DAW #In your Linux DAW (e.g. REAPER):\nGo to Preferences → Plug-ins → VST. Add the following directories: ~/.vst ~/.vst3 Rescan for plugins. You should now see your Windows VST plugins available in your Linux DAW as if they were native. ℹ️ Note: Some plugins might require additional libraries or fonts through winetricks depending on their vendor.\nKnown Issues and Fixes (from yabridge) #If you\u0026rsquo;re encountering issues with certain plugins, be sure to check the official Known Issues and Fixes section of the yabridge README. It provides:\nWorkarounds for problematic plugins Tips for bridging compatibility Environment variable tweaks (e.g. fixing UI scaling, crashes) Always refer to this when something doesn’t behave as expected — many plugin-specific problems have already been documented there.\n","date":"20 March 2025","permalink":"/posts/using-yabridge-to-run-windows-vst-plugins-on-linux/","section":"Posts","summary":"","title":"Using Yabridge to Run Windows Vst Plugins on Linux"},{"content":"I wanna build my site using Hugo. Here are some logs.\nI use the Congo theme.\nFollowing the theme documentation.\nFirst, we need to initialize the site and the theme.\nrequirements # Hugo Go Installing the site and theme # Initialize the site hugo new site \u0026lt;sitename\u0026gt; cd \u0026lt;sitename\u0026gt; # Prepare the theme using Hugo module # If you\u0026#39;re managing your project on GitHub hugo mod init github.com/\u0026lt;username\u0026gt;/\u0026lt;repo-name\u0026gt; # If you\u0026#39;re managing your project locally hugo mod init my-project Add the theme to your configuration mkdir -p config/_default cd config/_default touch module.toml Add the following line into module.toml [[imports]] path = \u0026#34;github.com/jpanther/congo/v2\u0026#34; Start your server using hugo server and the theme will be downloaded automatically.\nContent #Add content in the \u0026lsquo;\u0026lsquo;content/post\u0026rsquo;\u0026rsquo; folder.\nMore information: Directory structure\nHosting #I host this website on github using github pages.\nSee Host on GitHub Pages\nAdd Comments system #I use Giscus for Comments system.\n","date":"12 March 2025","permalink":"/posts/building_this_website/","section":"Posts","summary":"","title":"Building this Website"},{"content":"I enjoy the structure found in music and programming. I am passionate about exploring various software, including custom input methods, language and image generation AI, website development, and video editing, where I often reflect the same structure by focusing on themes and motifs from video game music.”\nFor more details on my competitions and activities, you can check my records here\n","date":"12 March 2025","permalink":"/about/","section":"Wmomood","summary":"","title":"About Me"},{"content":"After Zen Browser updated to version 1.9b, a small close button appears when hovering over a tab (in the Collapsed Toolbar Layout).\nI want to remove it, but I couldn\u0026rsquo;t find any option to do so.\nHide the Close Button # In Zen Browser, Type about:support in the address bar and press Enter. Look for the Profile Directory section. Create a file named userChrome.css in your Profile Directory/chrome (Create the chome folder if it doesn’t exist) Add the following CSS to userChrome.css .tab-close-button.close-icon { display: none !important; } Restart the browser. Find the Element You Want to Hide/Modify # Open the about:config page, search for devtools.debugger.remote-enabled Toggle the setting to true by double-clicking on it Press Ctrl + Shift + Alt + I to open the Developer Tools. If a popup window asks for permission, allow the connection. Navigate to the Inspector tab. Use the button next to the Inspector tab to select an element. Find the element’s class name in the Inspector panel. References # Live Editing Zen Theme - Zen Browser Docs ","date":"11 March 2025","permalink":"/posts/hide_zen_close_button/","section":"Posts","summary":"","title":"Hide the Close Button (or Any Similar UI Element) in Zen Browser"},{"content":"高中紀錄 #競賽紀錄 # APCS大學程式設計先修檢測 # 全國 | 個人 | 2024/06/16 最高觀念四級分、實作四級分 文件: 2024年國家科學及技術委員會 GenAl Stars生成式AI百工百業應用選拔 # 全國 | 團體 | 2024/10 特優 文件(特優): 文件(入圍複審): CPE大學程式能力檢定 # CPE大學程式能力檢定 | 2024/10/15 解題數: 2題 文件: YTP少年圖靈計畫-程式挑戰營 # YTP少年圖靈計畫-程式挑戰營 | 2024/8/3 參與證明 文件: 第十屆國立成功大學暑期高中生程式設計邀請賽-初賽 # 全國 | 團體 | 2024/4/14 參與證明 文件: 2024 FUN AI WINTER CAMP # 全國 | 個人 | 2024/02/04 表現特優 文件: USACO # 國際 | 個人 | 2024/01/17 銅牌 | 1000 (rank 1) 文件: 高中生AI扎根系列活動 # 全國 | 團體 | 2023/08/26\n第一名優勝團隊「表現傑出獎」\n文件: 全國 | 團體 | 2023/08/09\n綜合表現獎\n文件: 112學年度數理及資訊學科能力競賽初賽 # 校級 | 個人 | 2023/10/02 佳作 文件: 活動、研習參與紀錄 # 國立師範大學資訊工程學系「APCS C/C++程式設計課程」 # APCS C/C++程式設計課程 2024/7/6 | 參與證明 文件: 2024跨域AI玩轉環境大數據三日營 # 2024跨域AI玩轉環境大數據三日營:臺東場 2024/7/6 | 參與證明 文件: 2024高中海狸一日營 # 2024高中海狸一日營 2024/7/1 | 參與證明 文件: 教育部先進資通安全實務人才培育計畫 # 「臺灣尚青TAIWAN HolyYoung Training」-網站安全 # 2024/5/18 | 學習證書 6小時\n文件: 高中職學生資安體驗營 Happy CyberSecurity Day # 2023/7/8 | 學習證書 2小時\n文件: 資安深耕研習營 Advanced CyberSecurity Day：Happy Linux Day-Linux與基礎資安分析實務 # 2023/7/8 | 學習證書 4小時\n文件: 資安深耕研習營 Advanced CyberSecurity Day：Happy Python Day-Python與基礎資安分析實務 # 2023/7/9 | 學習證書 5小時\n文件: 國中紀錄 #國中競賽紀錄 # 2021 IEYI 世界青少年創客發明展暨台灣選拔賽（全國） # 全國 | 團體 | 2021/4/18\n銀牌獎\n文件: 109學年度科技教育創意實作競賽 生活科技組-國中組 # 花蓮縣 | 團體 | 2020/12/12\n生活科技組-國中組銅獎\n文件: 2020太平洋盃仿生機器人創作競賽 六足機器人競速賽 # 花蓮縣 | 個人 | 2020/9/19\n佳作\n文件: 國中活動研習參與紀錄 # 花蓮高中第32屆科學傳承營 # 2022/8/9~12 | 研習時數 32小時\n文件: 擔任國際女性科學日活動解說服務志工 # 2021/2/6~7 | 服務時數 9小時\n文件: 擔任花蓮縣科學闖關活動解說服務志工 # 2020/12/27 | 服務時數 4小時\n文件: ","date":"15 October 2024","permalink":"/posts/my-records/","section":"Posts","summary":"","title":"My records"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]